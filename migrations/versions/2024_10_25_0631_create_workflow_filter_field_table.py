"""create workflow filter field table

Revision ID: 751d4b0765b7
Revises: 96e2ed5bbe62
Create Date: 2024-10-25 06:31:02.314904

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '751d4b0765b7'
down_revision: Union[str, None] = '96e2ed5bbe62'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SCHEMA IF NOT EXISTS workflow")
    op.create_table('filter_field',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('field_name', sa.String(length=256), nullable=False),
    sa.Column('field_type', sa.Enum('STRING', 'NUMBER', 'BOOLEAN', 'DATETIME', name='filter_field_type', schema='workflow'), nullable=False),
    sa.Column('allowed_operations', postgresql.ARRAY(sa.Enum('EQUALS', 'NOT_EQUALS', 'CONTAINS', 'NOT_CONTAINS', 'LESS_THAN', 'GREATER_THAN', 'LESS_THAN_EQUALS', 'GREATER_THAN_EQUALS', 'IN', 'NOT_IN', name='operation', schema='workflow')), nullable=False),
    sa.Column('is_column', sa.Boolean(), nullable=False),
    sa.Column('schema', sa.String(length=256), nullable=True),
    sa.Column('table', sa.String(length=256), nullable=True),
    sa.Column('column', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('field_name'),
    schema='workflow'
    )
    op.create_index('idx_filter_field_field_name', 'filter_field', ['field_name'], unique=True, schema='workflow')
    op.create_index(op.f('ix_workflow_filter_field_id'), 'filter_field', ['id'], unique=False, schema='workflow')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_workflow_filter_field_id'), table_name='filter_field', schema='workflow')
    op.drop_index('idx_filter_field_field_name', table_name='filter_field', schema='workflow')
    op.drop_table('filter_field', schema='workflow')
    sa.Enum(name='operation', schema='workflow').drop(op.get_bind(), checkfirst=False)
    sa.Enum(name='filter_field_type', schema='workflow').drop(op.get_bind(), checkfirst=False)
    op.execute("DROP SCHEMA IF EXISTS workflow CASCADE")
    # ### end Alembic commands ###
